{
  "swagger": "2.0",
  "info": {
    "title": "Swagger Document",
    "description": "Swagger Document",
    "version": "1.0"
  },
  "produces": ["application/json"],
  "host": "localhost:5000",
  "basePath": "/api",
  "paths": {
    "/user/": {
      "post": {
        "x-swagger-router-controller": "middleware-name1",
        "operationId": "getUsers",
        "tags": ["User Data"],
        "summary": "Post User",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login data",
            "required": true,
            "schema": {
              "$ref": "#definitions/User"
            }
          }
        ],
        "responses": {}
      }
    },
    "/user/register": {
      "post": {
        "x-swagger-router-controller": "middleware-name1",
        "operationId": "getUsers",
        "tags": ["User Data"],
        "summary": "Register User",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register user data",
            "required": true,
            "schema": {
              "$ref": "#definitions/UserRegister"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "an authorization header",
            "required": "true",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/login": {
      "post": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "login",
        "tags": ["Login"],
        "summary": "Log a user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login data",
            "required": true,
            "schema": {
              "$ref": "#definitions/Login"
            }
          }
        ],
        "responses": {}
      }
    },
    "/appointments": {
        "get": {
            "x-swagger-router-controller": "middleware-name3",
            "operationId": "showAppointments",
            "tags": ["Appointments"],
            "summary": "Show appointments",
            "parameters": [{
                "in": "query",
                "name": "page",
                "required": false,
                "type": "string"
            }, {
                "in": "query",
                "name": "size",
                "required": false,
                "type": "string" 
            }, {
                "in": "query",
                "name": "order",
                "required": false,
                "type": "string"
            }, {
                "in": "query",
                "name": "way",
                "required": false,
                "type": "string"
            }, {
                "in": "header",
                "name": "authorization",
                "require": true,
                "type": "string"
            }],
            "responses": {

            }
        }
    }
  },
  "definitions": {
    "User": {
      "properties": {
        "name": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "birthdate": {
          "type": "date"
        },
        "maritalStatus": {
          "type": "string"
        },
        "idRecord": {
          "type": "Schema.Types.ObjectId",
          "ref": "records"
        },
        "status": {
          "type": "boolean",
          "default": "true"
        },
        "background": {
          "type": "boolean"
        },
        "range": {
          "type": "number",
          "default": "1"
        },
        "cause": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "UserRegister": {
      "properties": {
        "name": {
          "type": "string",
          "description": "This field contains the user's name.",
          "example": "Jose Ramon"
        },
        "middleName": {
          "type": "string",
          "description": "This field contains the user's middleName. Note: If the user does not have a middleName omit this field.",
          "example": "Silva"
        },
        "lastName": {
          "type": "string",
          "description": "This field contains the user's lastName.",
          "example": "Torres"
        },
        "email": {
          "type": "string",
          "description": "This field contains the user's email. Note: The password is sent to the email, use an email that you can access.",
          "example": "correo@gmail.com"
        },
        "phone": {
          "type": "number",
          "description": "This field contains the user's number phone. Note: Notifications will be sent to the number that is registered.",
          "example": "4495653636"
        },
        "birthdate": {
          "type": "string",
          "format": "date",
          "description": "This field contains the user's date of birth.",
          "example": "2000-04-03"
        },
        "maritalStatus": {
          "type": "string",
          "description": "This field contains the user's marital status.",
          "example": "Soltero"
        },
        "cause": {
          "type": "string",
          "description": "This field contains the reason why user registers. Note: If the user is a therapist enter 63ab303c9523e22c9ca14580 as a value.",
          "example": "Depresion"
        },
        "gender": {
          "type": "string",
          "description": "This field contains the user's gender. Note: Select male, female, or other.",
          "example": "Otro"
        },
        "range": {
          "type": "number",
          "description": "This field contains the range that will be assigned to the user. Note: 1 is for patient and 2 for therapist.",
          "example": 1
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Login": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Login"
      }
    },
    "Appointments": {
        "properties": {
            "idUser": {
                "type": "Schema.Types.ObjectId",
                "ref": "users"
            },
            "idPacient": {
                "type": "Schema.Types.ObjectId",
                "ref": "users"
            },
            "date": {
                "type": "string"
            },
            "hour": {
                "type": "string"
            }
        },
        "xml": {
            "name": "Appointments"
        }
    }
  }
}
