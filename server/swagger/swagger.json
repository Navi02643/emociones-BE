{
  "swagger": "2.0",
  "info": {
    "title": "Swagger Document",
    "description": "Swagger Document",
    "version": "1.0"
  },
  "produces": ["application/json"],
  "host": "localhost:5000",
  "basePath": "/api",
  "securityDefinitions": {
    "bearerAuth": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "enter the session token includes the word Bearer and a space before the token"
    }
  },
  "paths": {
    "/login": {
      "post": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "login",
        "tags": ["Login"],
        "summary": "Log a user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login data",
            "required": true,
            "schema": {
              "$ref": "#definitions/Login"
            }
          }
        ],
        "responses": {}
      }
    },
    "/session/logout": {
      "delete": {
        "x-swagger-router-controller": "middleware-name1",
        "operationId": "getUsers",
        "tags": ["Session"],
        "summary": "Register User",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "enter the session token includes the word Bearer and a space before the token",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/user/register": {
      "post": {
        "x-swagger-router-controller": "middleware-name2",
        "operationId": "getUsers",
        "tags": ["User"],
        "summary": "Register User",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register user data",
            "required": true,
            "schema": {
              "$ref": "#definitions/UserRegister"
            }
          }
        ],
        "responses": {}
      }
    },
    "/appointments": {
      "get": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "showAppointments",
        "tags": ["Appointments"],
        "summary": "Show appointments",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "way",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "createAppointments",
        "tags": ["Appointments"],
        "summary": "Register appointment",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create appointment data",
            "required": true,
            "schema": {
              "$ref": "#definitions/Appointments"
            }
        }
      ],
      "responses": {}
    },
    "put": {
      "x-swagger-router-controller": "middleware-name3",
      "operationId": "updateAppointments",
      "tags": ["Appointments"],
      "summary": "Update appointment",
      "security": [{ "bearerAuth": [] }],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Update appointment data",
          "required": true,
          "schema": {
            "$ref": "#definitions/Appointments"
          }
      }
    ],
    "responses": {}
    }
  },
    "/notification": {
      "post": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "sendNotification",
        "tags": ["Notifications"],
        "summary": "Send notification",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create appointment data",
            "required": true,
            "schema": {
              "$ref": "#definitions/Notification"
            }
          }
      ],
      "responses": {}
      }
    }
},
  "definitions": {
    "Login": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Login"
      }
    },
    "UserRegister": {
      "properties": {
        "name": {
          "type": "string",
          "description": "This field contains the user's name.",
          "example": "Jose Ramon"
        },
        "middleName": {
          "type": "string",
          "description": "This field contains the user's middleName. Note: If the user does not have a middleName omit this field.",
          "example": "Silva"
        },
        "lastName": {
          "type": "string",
          "description": "This field contains the user's lastName.",
          "example": "Torres"
        },
        "email": {
          "type": "string",
          "description": "This field contains the user's email. Note: The password is automatically generated, the password is sent to the email, use an email that you can access.",
          "example": "correo@gmail.com"
        },
        "phone": {
          "type": "number",
          "description": "This field contains the user's number phone. Note: Notifications will be sent to the number that is registered.",
          "example": "4495653636"
        },
        "birthdate": {
          "type": "string",
          "format": "date",
          "description": "this field contains the date of birth of the user in the format YYYY-MM-DD.",
          "example": "2000-04-03"
        },
        "maritalStatus": {
          "type": "string",
          "description": "This field contains the user's marital status.",
          "example": "Soltero"
        },
        "cause": {
          "type": "string",
          "description": "This field contains the reason why user registers. Note: If the user is a therapist enter 63ab303c9523e22c9ca14580 as a value.",
          "example": "Depresion"
        },
        "gender": {
          "type": "string",
          "description": "This field contains the user's gender. Note: Select male, female, or other.",
          "example": "Otro"
        },
        "range": {
          "type": "number",
          "description": "This field contains the range that will be assigned to the user. Note: 1 is for patient and 2 for therapist.",
          "example": 1
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Appointments": {
      "properties": {
        "idUser": {
          "type": "string",
          "description": "This field contains the ID of the therapist.",
          "example": "63aa409c3a6c25ca233c0713"
        },
        "idPacient": {
          "type": "string",
          "description": "This field contains the patient's ID.",
          "example": "63aa4fbd3a6c25ca233c071f"
        },
        "date": {
          "type": "string",
          "description": " his field contains the following format YYYY-MM-DD for the appointment.",
          "example": "2023-12-29"
        },
        "hour": {
          "type": "string",
          "description": " his field contains the following format HH:mm:ss for the appointment.",
          "example": "09:00:00"
        }
      },
      "xml": {
        "name": "Appointments"
      }
    },
    "Notification": {
      "properties": {
        "action": {
          "type": "string",
          "description": "This field contains the action to take. 1=remember one day before, 2=remember one hour before.",
          "example": "1"
        }
      },
      "xml": {
        "name": "Appointments"
      }
    }
  }  
}