{
  "swagger": "2.0",
  "info": {
    "title": "Swagger Document",
    "description": "Swagger Document",
    "version": "1.0"
  },
  "produces": ["application/json"],
  "host": "localhost:5000",
  "basePath": "/api",
  "securityDefinitions": {
    "bearerAuth": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "enter the session token includes the word Bearer and a space before the token"
    }
  },
  "paths": {
    "/login": {
      "post": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "login",
        "tags": ["Login"],
        "summary": "Log a user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login data",
            "required": true,
            "schema": {
              "$ref": "#definitions/Login"
            }
          }
        ],
        "responses": {}
      }
    },
    "/session/logout": {
      "delete": {
        "x-swagger-router-controller": "middleware-name1",
        "operationId": "getUsers",
        "tags": ["Session"],
        "summary": "Register User",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "enter the session token includes the word Bearer and a space before the token",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/user": {
      "get": {
        "x-swagger-router-controller": "middleware-name2",
        "operationId": "getUsers",
        "tags": ["User"],
        "summary": "Get all the users registered ( therapist, admin )",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer",
            "description": "This field contains the pageSize that will be displayed",
            "schema": {
              "example": "1"
            }
          },
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "type": "integer",
            "description": "This field contains the pageNumber of the page that will be displayed",
            "schema": {
              "example": "1"
            }
          }
        ],
        "responses": {}
      }
    },
    "/user/autocomplete": {
      "get": {
        "x-swagger-router-controller": "middleware-name2",
        "operationId": "getUsersName",
        "tags": ["User"],
        "summary": "UserName",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#definitions/UserGetName"
            }
          }
        ],
        "responses": {}
      }
    },
    "/user/patients": {
      "get": {
        "x-swagger-router-controller": "middleware-name2",
        "operationId": "getPatients",
        "tags": ["User"],
        "summary": "Get all the patients registered to a therapist",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer",
            "description": "This field contains the page that will be displayed",
            "schema": {
              "example": "1"
            }
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer",
            "description": "This field contains the size of the page that will be displayed",
            "schema": {
              "example": "10"
            }
          },
          {
            "in": "query",
            "name": "way",
            "required": false,
            "type": "integer",
            "description": "This field contains the way of the sorting of the patients by name",
            "schema": {
              "example": "Only accepts 1 or -1"
            }
          }
        ],
        "responses": {}
      }
    },
    "/user/registerPatient": {
      "post": {
        "x-swagger-router-controller": "middleware-name2",
        "operationId": "getUsers",
        "tags": ["User"],
        "summary": "Register Patient",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register user data",
            "required": true,
            "schema": {
              "$ref": "#definitions/PatientRegister"
            }
          }
        ],
        "responses": {}
      }
    },
    "/user/registerTherapist": {
      "post": {
        "x-swagger-router-controller": "middleware-name2",
        "operationId": "getUsers",
        "tags": ["User"],
        "summary": "Register Therapist",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register user data",
            "required": true,
            "schema": {
              "$ref": "#definitions/TherapistRegister"
            }
          }
        ],
        "responses": {}
      }
    },
    "/user/deleteTherapist": {
      "delete": {
        "x-swagger-router-controller": "middleware-name2",
        "operationId": "deleteTherapist",
        "tags": ["User"],
        "summary": "Elimination of therapist by the admin",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "_id",
            "required": false,
            "type": "integer",
            "description": "This field contains the id of the therapist",
            "schema": {
              "example": "_id: 63c6ed72c72043ee3d3ef450"
            }
          }
        ],
        "responses": {}
      }
    },
    "/appointments": {
      "get": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "showAppointments",
        "tags": ["Appointments"],
        "summary": "Show appointments",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "way",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "createAppointments",
        "tags": ["Appointments"],
        "summary": "Register appointment",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create appointment data",
            "required": true,
            "schema": {
              "$ref": "#definitions/Appointments"
            }
        }
      ],
      "responses": {}
    },
    "put": {
      "x-swagger-router-controller": "middleware-name3",
      "operationId": "updateAppointments",
      "tags": ["Appointments"],
      "summary": "Update appointment",
      "security": [{ "bearerAuth": [] }],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Update appointment data",
          "required": true,
          "schema": {
            "$ref": "#definitions/AppointmentsUpdate"
          }
      }
    ],
    "responses": {}
    },
    "delete": {
      "x-swagger-router-controller": "middleware-name3",
      "operationId": "deleteAppointments",
      "tags": ["Appointments"],
      "summary": "Delete appointment",
      "security": [{ "bearerAuth": [] }],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Delete appointment data",
          "required": true,
          "schema": {
            "$ref": "#definitions/AppointmentsDelete"
          }
      }
    ],
    "responses": {}
    }
    },
    "/notification": {
      "post": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "sendNotification",
        "tags": ["Notifications"],
        "summary": "Send notification",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create appointment data",
            "required": true,
            "schema": {
              "$ref": "#definitions/Notification"
            }
          }
      ],
      "responses": {}
      }
    },
    "/followup/createNote": {
      "post": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "createNotes",
        "tags": ["FollowUp"],
        "summary": "Create note of followup",
        "parameters": [
          {
           "in": "body",
            "name": "body",
            "description": "Create note of followup",
            "required": true,
            "schema": {
              "$ref": "#definitions/Followup"
            }
          }
        ],
        "responses": {}
      }
    },
    "/record": {
      "post": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "openRecord",
        "tags": ["Records"],
        "summary": "Open record",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Open record",
            "required": true,
            "schema": {
              "$ref": "#definitions/UserRecordsCreate"
            }
          }
      ],
      "responses": {}
      },
      "delete": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "CloseRecord",
        "tags": ["Records"],
        "summary": "Close record",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create appointment data",
            "required": true,
            "schema": {
              "$ref": "#definitions/UserRecordsClose"
            }
          }
      ],
      "responses": {}
      },
      "get": {
        "x-swagger-router-controller": "middleware-name3",
        "operationId": "GetMultipleRecords",
        "tags": ["Records"],
        "summary": "Get record",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer",
            "description": "This field contains the page that will be displayed",
            "schema": {
              "example": "1"
            }
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer",
            "description": "This field contains the size of the page",
            "schema": {
              "example": "10"
            }
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string",
            "description": "This field contains the order in which they will be displayed",
            "schema": {
              "example": "creationDate || Pacient.fullName"
            }
          },
          {
            "in": "query",
            "name": "way",
            "required": false,
            "type": "integer",
            "description": "This field contains the way in which they are sorted",
            "schema": {
              "example": "1 || -1"
            }
          }
        ],
      "responses": {}
      }
    }
},
  "definitions": {
    "Login": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Login"
      }
    },
    "UserGetName": {
      "properties": {
        "name": {
          "type": "string",
          "description": "This field contains the name of the users.",
          "example": "Eduardo"
        }
      },
      "xml": {
        "name": "UserGetName"
      }
    },
    "PatientRegister": {
      "properties": {
        "name": {
          "type": "string",
          "description": "This field contains the user's name.",
          "example": "Jose Ramon"
        },
        "middleName": {
          "type": "string",
          "description": "This field contains the user's middleName. Note: If the user does not have a middleName omit this field.",
          "example": "Silva"
        },
        "lastName": {
          "type": "string",
          "description": "This field contains the user's lastName.",
          "example": "Torres"
        },
        "email": {
          "type": "string",
          "description": "This field contains the user's email. Note: The password is automatically generated, the password is sent to the email, use an email that you can access.",
          "example": "correo@gmail.com"
        },
        "phone": {
          "type": "number",
          "description": "This field contains the user's number phone. Note: Notifications will be sent to the number that is registered.",
          "example": "4495653636"
        },
        "birthdate": {
          "type": "string",
          "format": "date",
          "description": "this field contains the date of birth of the user in the format YYYY-MM-DD.",
          "example": "2000-04-03"
        },
        "maritalStatus": {
          "type": "string",
          "description": "This field contains the user's marital status.",
          "example": "Soltero"
        },
        "gender": {
          "type": "string",
          "description": "This field contains the user's gender. Note: Select male, female, or other.",
          "example": "Otro"
        }
      },
      "xml": {
        "name": "Patient"
      }
    },
    "TherapistRegister": {
      "properties": {
        "name": {
          "type": "string",
          "description": "This field contains the user's name.",
          "example": "Jose Ramon"
        },
        "middleName": {
          "type": "string",
          "description": "This field contains the user's middleName. Note: If the user does not have a middleName omit this field.",
          "example": "Silva"
        },
        "lastName": {
          "type": "string",
          "description": "This field contains the user's lastName.",
          "example": "Torres"
        },
        "email": {
          "type": "string",
          "description": "This field contains the user's email. Note: The password is automatically generated, the password is sent to the email, use an email that you can access.",
          "example": "correo@gmail.com"
        },
        "phone": {
          "type": "number",
          "description": "This field contains the user's number phone. Note: Notifications will be sent to the number that is registered.",
          "example": "4495653636"
        },
        "birthdate": {
          "type": "string",
          "format": "date",
          "description": "this field contains the date of birth of the user in the format YYYY-MM-DD.",
          "example": "2000-04-03"
        },
        "license": {
          "type": "string",
          "description": "This field contains the therapist license number.",
          "example": "9999999"
        },
        "range": {
          "type": "integer",
          "description": "This field contains the user range.",
          "example": "2"
        }
      },
      "xml": {
        "name": "Therapist"
      }
    },
    "Appointments": {
      "properties": {
        "idUser": {
          "type": "string",
          "description": "This field contains the ID of the therapist.",
          "example": "63aa409c3a6c25ca233c0713"
        },
        "idPacient": {
          "type": "string",
          "description": "This field contains the patient's ID.",
          "example": "63aa4fbd3a6c25ca233c071f"
        },
        "date": {
          "type": "string",
          "description": " his field contains the following format YYYY-MM-DD for the appointment.",
          "example": "2023-12-29"
        },
        "hour": {
          "type": "string",
          "description": " his field contains the following format HH:mm:ss for the appointment.",
          "example": "09:00:00"
        }
      },
      "xml": {
        "name": "Appointments"
      }
    },
    "AppointmentsUpdate": {
      "properties": {
        "_id": {
          "type": "string",
          "description": "This field contains the ID of the appointment.",
          "example": "63aa409c3a6c25ca233c0713"
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": " his field contains the following format YYYY-MM-DD HH:mm:ss for the appointment.",
          "example": "2000-04-03 09:00:00"
        }
      },
      "xml": {
        "name": "AppointmentsUpdate"
      }
    },
    "AppointmentsDelete": {
      "properties": {
        "_id": {
          "type": "string",
          "description": "This field contains the ID of the appointment.",
          "example": "63aa409c3a6c25ca233c0713"
        }
      },
      "xml": {
        "name": "AppointmentsDelete"
      }
    },
    "Notification": {
      "properties": {
        "action": {
          "type": "string",
          "description": "This field contains the action to take. 1=remember one day before, 2=remember one hour before.",
          "example": "1"
        }
      },
      "xml": {
        "name": "Notification"
      }
    },
    "UserRecords": {
      "properties": {
        "idUser": {
          "type": "string",
          "description": "This field contains the ID of the therapist.",
          "example": "63aa409c3a6c25ca233c0713"
        },
        "idPacient": {
          "type": "string",
          "description": "This field contains the patient's ID.",
          "example": "63ab303d9523e22c9ca14583"
        },
        "cause": {
          "type": "string",
          "description": "This field contains the record cause.",
          "example": "Ansiedad"
        }
      },
      "xml": {
        "name": "UserRecords"
      }
    },
    "UserRecordsClose": {
      "properties": {
        "idRecord": {
          "type": "string",
          "description": "This field contains the record's ID.",
          "example": "63beefef09ce2995e627b160"
        }
      },
      "xml": {
        "name": "UserRecordsClose"
      }
    },
    "Followup": {
      "properties": {
        "idRecord": {
          "type": "string",
          "description": "This field contains the ID of the selected record.",
          "example": "63b70b02c58705e228d6c347"
        },
        "note": {
          "type": "string",
          "description": "This field contains the text of the note taken during the session.",
          "example": "Ut molestias vero non consequatur ipsam. Lorem ipsum dolor sit amet. Sit quia repellendus Ea galisum qui nihil voluptatem est sapiente nesciunt qui rerum voluptatum ut perspiciatis molestiae et perferendis pariatur. Qui harum modiAt dolores non fugit amet ab nisi culpa non iste exercitationem sit velit architecto ut ipsam neque? Nam illum omnis nam sint tenetur Et suscipit et nihil magni sed animi dolores sit corrupti maiores et illum deserunt! Sed voluptas ullam et molestias temporaEt error est veniam eius sed natus velit ut officiis consequatur non omnis sint? In beatae illum aut debitis officiisEum internos et animi perspiciatis aut voluptas similique a corrupti veniam? 33 perspiciatis officiisAut enim est iure quia et dolor minima. At expedita rationeUt provident et odio placeat est autem consequuntur ut enim nihil 33 similique minima. Et enim beatae sed laudantium doloremqueAd quia aut distinctio rerum id officiis natus est obcaecati fugit aut harum consequuntur. Qui voluptatum distinctioEt esse ab debitis ratione 33 exercitationem blanditiis est repellat quasi. Est vitae maioresEt odit est consequatur nobis eos quas quae! Ut repellendus nesciuntAb tempore ut maiores perferendis? Et harum nobisUt obcaecati est perspiciatis officiis et vero rerum vel natus vitae aut provident fugit rem ullam sint? Aut rerum pariatur est galisum debitisaut molestiae. Ut maiores excepturi eum labore laboriosamUt fugiat. Et perferendis maxime quo praesentium quis. Ut rerum fugit et voluptatum omnisut dolorem sit esse adipisci. Nam voluptas voluptatem Et quas aut voluptas recusandae qui laudantium eius. Est ullam odit est quod pariaturUt voluptates vel esse voluptatibus cum voluptatibus veniam et laudantium cumque. Qui voluptatem explicabo Sed nostrum non mollitia rerum qui ducimus architecto sit dignissimos dolores et eaque nulla sit quam pariatur! Qui reprehenderit esse qui illo magnamNon culpa ea excepturi ratione et inventore voluptas ea veniam officia aut repellat ratione. Ex aspernatur eius quo corrupti dignissimosaut sunt aut laudantium nemo. Et cumque aperiam Non aliquam et placeat iure ut omnis sequi et sapiente minima qui nihil recusandae aut voluptas fugiat. Et pariatur quas 33 quia numquamsed deserunt aut saepe perferendis? Sit nihil consequuntur et maxime eaquesit dicta qui odio omnis et quia inventore. Et totam errorEt tenetur ut distinctio nemo! Qui consectetur voluptatesAd atque qui laboriosam quisquam ab architecto eaque et molestiae inventore ut necessitatibus molestiae et molestiae necessitatibus. Id alias nemoNon dolores ut eius doloribus. 33 dolorum minus sit expedita natusQui sunt. Ex deserunt exercitationemUt placeat rem sunt officiis ut consequuntur delectus? Et sunt mollitia id eveniet ipsa. Est eius possimus id accusantium beatae eos enim sequi quo magnam minima. Et accusantium adipisci 33 unde odio. Est eveniet quas qui sint enim ad eaque placeat qui debitis totam. Ut consequatur temporibus. Eum consectetur totam aut Quis ipsa. Ea impedit beatae et eaque provident. Et corrupti libero eum dicta molestiae ex debitis tempora! Aut dolorem similique non odio consequatur vel voluptatibus sint? In omnis molestiasAut ducimus ea optio sequi vel minima quaerat. Id quas dolorUt Quis ex tempora ullam non labore sint ut sunt consequatur ad labore sint! Et reprehenderit voluptasAut adipisci qui earum voluptas et dolor porro non laborum dolores. Qui sint architectoRem quod sit quae sequi. Et commodi aperiam qui accusantium neque Eum officia qui voluptas obcaecati et quod velit et harum obcaecati. Et commodi officiaEa tenetur aut eveniet omnis id animi consequatur. Cum molestiae temporibus Ea ipsam ut incidunt asperiores cum dignissimos tempore est nobis iusto id vitae odit. Sed galisum quidemEa labore a placeat alias rem accusamus inventore aut optio porro. Vel sint dignissimos ea libero officiiset dignissimos hic voluptatem cupiditate quo internos accusantium. Aut Quis quis Et totam sed debitis accusantium. Et omnis errorEum porro eum debitis accusantium ea fugit debitis. Ea corrupti veritatis quo galisum obcaecati. Et recusandae quae aut aliquam blanditiis aut fugit accusamus. Et eligendi consequatur 33 alias tenetur sit quis omnis! Sed sunt tenetur rem voluptas nostrum aut galisum quaerat et voluptatem corporis. Qui odit consequuntur id reiciendis sint et nesciunt autem 33 quisquam earum."
        }
      },
      "xml": {
        "name": "Followup"
      }
    }
  }  
}
